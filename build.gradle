plugins {
    id 'java'
    id "io.qameta.allure" version "2.9.6"
}

group 'org.qaguru'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def selenideVersion = '6.2.1',
    junitVersion = '5.8.2',
    slf4jVersion = '1.7.33',
    allureVersion = "2.17.2"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        autoconfigure.set(true)
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            'org.json:json:20220320',
            'io.rest-assured:rest-assured:5.0.1',
            'org.aeonbits.owner:owner:1.0.12',
            'org.assertj:assertj-core:3.22.0',
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion")

    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

compileJava {
    options.encoding = "UTF-8"
}
compileTestJava {
    options.encoding = "UTF-8"
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
//
//task properties_test(type: Test) {
//    useJUnitPlatform {
//        includeTags "properties"
//    }
//}
task smoke_test(type: Test) {
    useJUnitPlatform {
        includeTags "smoke"
    }
}

task api_test(type: Test) {
    useJUnitPlatform {
        includeTags "api"
    }
}

task ui_test(type: Test) {
    useJUnitPlatform {
        includeTags "ui"
    }
}